apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    instance: ${etcd_name}
    name: etcd
  name: ${etcd_name}
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: ${etcd_pvc_retain_policy}
  replicas: ${etcd_cluster_size}
  selector:
    matchLabels:
      instance: ${etcd_name}
      name: etcd
  serviceName: ${etcd_name}-peer
  template:
    metadata:
      labels:
        instance: ${etcd_name}
        name: etcd
    spec:
      initContainers:
        - args:
            - chown -R 65532:65532 /var/etcd/data
          command:
            - sh
            - -c
            - --
          image: alpine:3.18.0
          imagePullPolicy: IfNotPresent
          name: change-permissions
          securityContext:
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /var/etcd/data/
              name: ${etcd_name}
      containers:
        - args:
            - start-etcd
          image: ${etcd_wrapper_image} # change this to where you have hosted the docker image for etcd-wrapper.
          imagePullPolicy: IfNotPresent
          name: etcd
          ports:
            - containerPort: 2380
              name: server
              protocol: TCP
            - containerPort: 2379
              name: client
              protocol: TCP
          volumeMounts:
            - mountPath: /var/etcd/data/
              name: ${etcd_name}
        - args:
            - server
            - --defragmentation-schedule=1-59 * * * *
            - --schedule=42 16 * * *
            - --garbage-collection-policy=Exponential
            - --data-dir=/var/etcd/data/new.etcd
            - --restoration-temp-snapshots-dir=/var/etcd/restoration.temp
            - --embedded-etcd-quota-bytes=8589934592
            - --endpoints=${scheme}://${etcd_name}-local:2379
            - --service-endpoints=${scheme}://${etcd_name}-client:2379
            - --etcd-connection-timeout=5m
            - --delta-snapshot-period=1m0s
            - --delta-snapshot-memory-limit=104857600
            - --garbage-collection-period=12h0m0s
            - --compress-snapshots=true
            - --compression-policy=gzip
            - --auto-compaction-mode=periodic
            - --auto-compaction-retention=30m
            - --etcd-snapshot-timeout=15m
            - --etcd-defrag-timeout=15m
            - --snapstore-temp-directory=/var/etcd/data/temp
            - --enable-member-lease-renewal=true
            - --k8s-heartbeat-duration=10s
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: ${etcd_br_image}
          imagePullPolicy: IfNotPresent
          name: backup-restore
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          ports:
            - containerPort: 8080
              name: server
              protocol: TCP
          volumeMounts:
            - mountPath: /var/etcd/data
              name: ${etcd_name}
            - mountPath: /var/etcd/config/
              name: etcd-config-file
      hostAliases:
        - hostnames:
            - ${etcd_name}-local
          ip: 127.0.0.1
      serviceAccountName: ${etcd_name}
      securityContext:
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: etcd.conf.yaml
                path: etcd.conf.yaml
            name: ${etcd_cm_name}
          name: etcd-config-file
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: ${etcd_name}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 16Gi
        volumeMode: Filesystem
